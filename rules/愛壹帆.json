{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"一级分类","path":"fl","rule":"js:\nvar d = [];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\n\nconst 分类颜色 = getRangeColors()\nconst 大类定位 = '.navbar-items'\nconst 拼接分类 = 'body&&.module-class-items'\nconst 小类定位 = 'body&&a:not(:matches(首页|更新|热榜))'\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&href'\nMY_URL = MY_URL.replace('hiker://empty##', '')\n\nlet true_url = getMyVar(\"url\", MY_URL)\nconst page = MY_PAGE\nif (getMyVar(\"url\")) {\n    true_url = true_url.replace(/\\/t\\/(\\d+)\\// ,'/k/$1-----------/').replace('---/', page + '---/').replace(/(---\\d+\\/)/, page + '$1')\n}\n\nvar html = fetch(true_url)\n\neval(JSON.parse(fetch('hiker://page/sm', {})).rule);\n\n//一级页面\nvar list = pdfa(html, '.module-poster-items-base&&a');\nfor (var j in list) {\n    d.push({\n        title: pdfh(list[j], 'a&&title'),\n        desc: pdfh(list[j], '.module-item-note&&Text'),\n        img: pd(list[j], '.lazyload&&data-original') + '@Referer=',\n        url: pd(list[j], 'a&&href') + '#immersiveTheme#'+$('').rule(()=>{\neval(JSON.parse(fetch('hiker://page/er', {})).rule);\n})\n    });\n}\nsetResult(d);"},{"col_type":"movie_3","name":"动态分类","path":"sm","rule":"const empty = \"hiker://empty\"\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"url\");\n    clearMyVar(\"t\");\n}));\ntry {\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\n} catch (e) {\n    var categories = pdfa(html, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar(\"fold\", \"0\")\nconst cate_temp_json = getMyVar(\"t\", JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\nif (parseInt(page) === 1) {\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #FF0000\">∨</span></b>' : '““””<b><span style=\"color: #1aad19\">∧</span></b>',\n        url: $().lazyRule((fold) => {\n            putMyVar(\"fold\", fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\nvar aa = pdfa(html, '.navbar-items&&a:not(:matches(首页|更新|热榜))')\nvar n = aa.map(data => pdfh(data, 'a&&href').replace(/.*?(\\d+).*/ ,'$1'))\nlog(n)\nvar k = true_url.match(/k\\/(\\d+)/)[1]\nlog(k)\nvar j = n.indexOf(k);\n//log(j)\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\nif(j != -1) {\ncate_temp[index]=j\n}\n            sub_categories.forEach((item, key) => {\n//log(cate_temp[index])\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() == cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar(\"t\", JSON.stringify(new_cate))\n                        putMyVar(\"url\", input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        params.cate_temp[params.index] = params.key.toString()\n\n                        putMyVar(\"t\", JSON.stringify(params.cate_temp))\n                        putMyVar(\"url\", input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        index: index,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"},{"col_type":"movie_3","name":"二级","path":"er","rule":"js:\nvar d = [];\nvar html = getResCode();\neval(JSON.parse(fetch('hiker://page/lazy', {})).rule);\nlet 线路 = '.module-tab-items-box&&span'\nlet 线路名 = 'Text'\nlet 选集 = 'body&&.module-play-list'\nlet 选集列表 = 'body&&a'\nlet 详情1 = '.module-info-item:matches(导演：)&&Text'\nlet 详情 = '.module-info-item:matches(主演：)&&Text'\nlet 详情2 = '.module-info-item:matches(更新：)&&Text'\nlet 封面 = '.module-item-pic&&img&&data-original'\nlet 简介 = '.module-info-introduction-content&&Text'\nlet tabs = []\nlet lists = []\npdfa(html, 线路).forEach(data => {\n    tabs.push(pdfh(data, 线路名).replace(/(.*?)号线.*/,'$1'))\n})\n\npdfa(html, 选集).forEach(data => {\n    lists.push(pdfa(data, 选集列表))\n})\ntry {\n    d.push({\n        title: pdfh(html, 详情).substring(0, 18),\n        desc: pdfh(html, 详情1) +\n            '\\n' +\n            '\\n' +\n            pdfh(html, 详情2).substring(0, 18),\n        img: pd(html,\n            封面) + '@Referer=',\n        url: MY_URL,\n        col_type: 'movie_1_vertical_pic_blur',\n        extra: {\n            gradient: true\n        }\n    });\n} catch (e) {\n    d.push({\n        img: pd(html, 封面) + '@Referer=',\n        url: MY_URL,\n        col_type: 'movie_1_vertical_pic_blur',\n    });\n}\nd.push({\n    title: '‘‘’’<small><font color=\"#ff148e8e\">简介：' + pdfh(html, 简介).substr(0, 55) + '...</font><small><font color=\"red\">详情</font></small></small>',\n    url: 'hiker://empty#' + '\\n' + pdfh(html, 简介) + '#noHistory#' + `@rule=js: var d = [];d.push({title:'影片简介：'+ MY_URL.split('#')[1],col_type: 'long_text'}); setResult(d);`,\n    col_type: 'text_1'\n});\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"lists\");\n}));\nstorage0.putMyVar(\"lists\", lists);\nvar list = lists[getMyVar(MY_URL, '0')];\nvar 排序 = getMyVar(MY_URL + \"章节排序\", '#1aad19\">正序');\nvar 提示 = 排序 == '#FF0000\">倒序' ? '#1aad19\">正序' : '#FF0000\">倒序';\nvar 排序名 = '““””<b><span style=\"color:排序</span></b>'\n\nd.push({\n    title: '““””<b><span style=\"color: ' + 排序 + '</span></b>',\n    url: $(\"#noLoading#\").lazyRule((tabs, 排序名, lazy, d) => {\n        var lists = storage0.getMyVar(\"lists\");\n        let 章节 = lists[getMyVar(MY_URL, '0')];\n        var 排序 = getMyVar(MY_URL + \"章节排序\", '#1aad19\">正序');\n        var 提示 = 排序 == '#FF0000\">倒序' ? '#1aad19\">正序' : '#FF0000\">倒序';\n        updateItem({\n            extra: {\n                id: MY_URL + \"_排序\",\n            },\n            title: 排序名.replace('排序', 提示)\n        })\n        章节 = 排序 == '#1aad19\">正序' ? 章节.reverse() : 章节;\n        let cp = 章节.map((data, ssid) => {\n            return {\n                title: pdfh(data, 'a&&Text'),\n                url: pd(data, 'a&&href') + lazy,\n                col_type: 章节.length > 3 ? 'text_4' : 'text_2',\n                extra: {\n                    cls: MY_URL + \"_选集\",\n                    id: pd(data, 'a&&href'),\n                    js:  ` document.querySelector(\"button\").click()` \n                }\n            };\n        });\n        deleteItemByCls(MY_URL + \"_选集\");\n        addItemBefore(MY_URL + \"footer\", cp);\n        putMyVar(MY_URL + \"章节排序\", 提示)\n        return \"hiker://empty\"\n    }, tabs, 排序名, lazy, d[0]),\n    col_type: 'scroll_button',\n    extra: {\n        id: MY_URL + \"_排序\",\n    }\n})\n\ntabs.forEach((data, id) => {\n    d.push({\n        title: getMyVar(MY_URL, '0') == id ? '““' + data + '””' : data,\n        url: $(\"#noLoading#\").lazyRule((线路, lazy, id) => {\n            var lists = storage0.getMyVar(\"lists\");\n            var 排序 = getMyVar(MY_URL + \"章节排序\", '#1aad19\">正序');\n            var 提示 = 排序 == '#FF0000\">倒序' ? '#1aad19\">正序' : '#FF0000\">倒序';\n            线路.forEach((data, xlid) => {\n                updateItem({\n                    title: id == xlid ? '““' + data + '””' : data,\n                    extra: {\n                        id: MY_URL + \"_线路\" + xlid\n                    }\n                });\n            })\n            putMyVar(MY_URL, id)\n            let 章节 = lists[getMyVar(MY_URL, '0')];\n            章节 = 排序 == '#FF0000\">倒序' ? 章节.reverse() : 章节;\n            let cp = 章节.map((data, ssid) => {\n                return {\n                    title: pdfh(data, 'a&&Text'),\n                    url: pd(data, 'a&&href') + lazy,\n                    col_type: 章节.length > 3 ? 'text_4' : 'text_2',\n                    extra: {\n                        cls: MY_URL + \"_选集\",\n                        id: pd(data, 'a&&href'),\n                        js:  ` document.querySelector(\"button\").click()` \n                    }\n                };\n            });\n            deleteItemByCls(MY_URL + \"_选集\");\n            addItemBefore(MY_URL + \"footer\", cp);\n            return \"hiker://empty\"\n        }, tabs, lazy, id),\n        col_type: 'scroll_button',\n        extra: {\n            id: MY_URL + \"_线路\" + id\n        }\n    });\n})\n\nlet list = 排序 === '#FF0000\">倒序' ? list.reverse() : list;\nlist.forEach((data, id) => {\n    d.push({\n        title: pdfh(data, 'a&&Text'),\n        url: pd(data, 'a&&href') + lazy,\n        col_type: list.length > 3 ? 'text_4' : 'text_2',\n        extra: {\n            cls: MY_URL + \"_选集\",\n            id: pd(data, 'a&&href'),\n            js:  ` document.querySelector(\"button\").click()`  \n        },\n    });\n})\nd.push({\n    col_type: \"big_blank_block\",\n    extra: {\n        id: MY_URL + \"footer\"\n    }\n});\nsetResult(d);"},{"col_type":"movie_3","name":"lazy","path":"lazy","rule":"var lazy = $('').lazyRule((MY_HOME)=> {\n    var html = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1])\n    var url = html.url\n    if (html.encrypt == '1') {\n        url = unescape(url);\n    } else if (html.encrypt == '2') {\n        url = unescape(base64Decode(url));\n    }\n        return url\n}, MY_HOME)"}],"title":"愛壹帆","author":"缘分","version":0,"type":"video","url":"https://www.iyf.lv","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nvar html = getResCode();\nvar arr = []\nvar list = pdfa(html, '.swiper-big&&.swiper-slide')\nfor (var j = 0; j < list.length; j++) {\n    arr.push({\n        title: pdfh(list[j], '.v-title&&Text'),\n        img: MY_URL + pdfh(list[j], 'a&&style').match(/\\((.+)\\)/)[1] + \"@Referer=\",\n        url: pd(list[j], 'a&&href') + '#immersiveTheme#',\n    });\n}\n\nvar r = $.require(\"https://gitee.com/zetalpha/hikerview/raw/master/global/js/x5ui.js\", undefined, 24);\nr.show(d, arr);\n\nvar list = pdfa(html, '.content&&.module:not(:matches(热映|热榜))')\n    list.forEach((datas, i) => {\n\n\nvar lists = pdfa(datas, '.module-tab-items-box&&span')\nvar lists = lists.map((data, j) => pdfh(data, 'span&&Text'))      \n        d.push({\n            title: '<b>' + pdfh(datas, 'h2--span&&Text'),\n            img: 'https://hikerfans.com/tubiao/movie/39.svg',\n            url:  $(lists, 3, '选择类型', getItem('j', '-1')).select((lists, datas, i) => {\nlet j = lists.indexOf(input)+'';\nsetItem('j', j)\nvar html = pdfa(datas, 'body&&.module-items')\n            var list = pdfa(html[j], '.module-items&&a,1:')\n\n            let cp = list.map((data, ssid) => {\n                return {\n                    title: pdfh(data, 'a&&title'),\n                    img: 'https://www.iyf.lv'+pdfh(data, 'img&&data-original') + '@Referer=',\n                    url: 'https://www.iyf.lv'+pdfh(data, 'a&&href')+\"#immersiveTheme#\" ,\n                    extra: {\n                        cls: 'https://www.iyf.lv' + i,\n                        id: 'https://www.iyf.lv'+pdfh(data, 'a&&href')\n                    }\n                };\n            });\n            deleteItemByCls('https://www.iyf.lv' + i);\n            addItemBefore('https://www.iyf.lv' + i, cp);\n            return 'hiker://empty';\n}, lists, datas, i),\n            col_type: 'avatar',\n        })\nvar list = pdfa(datas, '.module-items&&a,1:')\nlist.forEach((data, index) => {\n        d.push({\n            title: pdfh(data, 'a&&title'),\n           // desc: pdfh(data, '.pic-text&&Text'),\n            //content: pdfh(data, '.module-info-item&&Text'),\n            img: pd(data, 'img&&data-original') + '@Referer=',\n            url: pd(data, 'a&&href') + \"#immersiveTheme#\",\n            col_type: '',\n            extra: {\n            cls: 'https://www.iyf.lv' + i,\n            id: pd(data, 'a&&href')\n        },\n        })\n    })\nd.push({\n    col_type: \"big_blank_block\",\n    extra: {\n        id: 'https://www.iyf.lv' + i\n    }\n    })\nd.push({\n            title: '✨ 更多 ✨',           \n            url: pd(datas, 'h2&&a&&href').replace(/\\/t\\/(\\d+)\\// ,'/k/$1--------fypage---/')+$('#noHistory##noRecordHistory#').rule(()=>{\n\neval(JSON.parse(fetch('hiker://page/fl', {})).rule);\n}),\n            col_type: 'text_center_1',\n            })\n});\nsetResult(d)","searchFind":"js:\nvar d = [];\nvar html = getResCode();\nvar list = pdfa(html, '.module-items&&.module-card-item')\ntry {\n    list.forEach(data => {\n        d.push({\n            title: pdfh(data, 'strong&&Text'),\n            desc: pdfh(data, '.module-item-note&&Text'),\n            content: pdfh(data, '.module-info-item&&Text'),\n            img: pd(data, 'img&&data-original') + '@Referer=',\n            url: pd(data, 'a&&href') + \"#immersiveTheme#\",\n            col_type: '',\n        })\n    })\n} catch (e) {}\nsetResult(d)","search_url":"https://www.iyf.lv/s/**----------fypage---/","group":"#缘分","detail_col_type":"movie_1","detail_find_rule":"js:\neval(JSON.parse(fetch('hiker://page/er', {})).rule);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"一级分类\",\"path\":\"fl\",\"rule\":\"js:\\nvar d = [];\\nvar getRangeColors = function() {       \\n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \\n}\\n\\nconst 分类颜色 = getRangeColors()\\nconst 大类定位 = '.navbar-items'\\nconst 拼接分类 = 'body&&.module-class-items'\\nconst 小类定位 = 'body&&a:not(:matches(首页|更新|热榜))'\\nconst 分类标题 = 'a&&Text'\\nconst 分类链接 = 'a&&href'\\nMY_URL = MY_URL.replace('hiker://empty##', '')\\n\\nlet true_url = getMyVar(\\\"url\\\", MY_URL)\\nconst page = MY_PAGE\\nif (getMyVar(\\\"url\\\")) {\\n    true_url = true_url.replace(/\\\\/t\\\\/(\\\\d+)\\\\// ,'/k/$1-----------/').replace('---/', page + '---/').replace(/(---\\\\d+\\\\/)/, page + '$1')\\n}\\n\\nvar html = fetch(true_url)\\n\\neval(JSON.parse(fetch('hiker://page/sm', {})).rule);\\n\\n//一级页面\\nvar list = pdfa(html, '.module-poster-items-base&&a');\\nfor (var j in list) {\\n    d.push({\\n        title: pdfh(list[j], 'a&&title'),\\n        desc: pdfh(list[j], '.module-item-note&&Text'),\\n        img: pd(list[j], '.lazyload&&data-original') + '@Referer=',\\n        url: pd(list[j], 'a&&href') + '#immersiveTheme#'+$('').rule(()=>{\\neval(JSON.parse(fetch('hiker://page/er', {})).rule);\\n})\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"sm\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\naddListener(\\\"onClose\\\", $.toString(() => {\\n    clearMyVar(\\\"url\\\");\\n    clearMyVar(\\\"t\\\");\\n}));\\ntry {\\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\\n} catch (e) {\\n    var categories = pdfa(html, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar(\\\"fold\\\", \\\"0\\\")\\nconst cate_temp_json = getMyVar(\\\"t\\\", JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\nif (parseInt(page) === 1) {\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #FF0000\\\">∨</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">∧</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar(\\\"fold\\\", fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\nvar aa = pdfa(html, '.navbar-items&&a:not(:matches(首页|更新|热榜))')\\nvar n = aa.map(data => pdfh(data, 'a&&href').replace(/.*?(\\\\d+).*/ ,'$1'))\\nlog(n)\\nvar k = true_url.match(/k\\\\/(\\\\d+)/)[1]\\nlog(k)\\nvar j = n.indexOf(k);\\n//log(j)\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\nif(j != -1) {\\ncate_temp[index]=j\\n}\\n            sub_categories.forEach((item, key) => {\\n//log(cate_temp[index])\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() == cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar(\\\"t\\\", JSON.stringify(new_cate))\\n                        putMyVar(\\\"url\\\", input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putMyVar(\\\"t\\\", JSON.stringify(params.cate_temp))\\n                        putMyVar(\\\"url\\\", input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"二级\",\"path\":\"er\",\"rule\":\"js:\\nvar d = [];\\nvar html = getResCode();\\neval(JSON.parse(fetch('hiker://page/lazy', {})).rule);\\nlet 线路 = '.module-tab-items-box&&span'\\nlet 线路名 = 'Text'\\nlet 选集 = 'body&&.module-play-list'\\nlet 选集列表 = 'body&&a'\\nlet 详情1 = '.module-info-item:matches(导演：)&&Text'\\nlet 详情 = '.module-info-item:matches(主演：)&&Text'\\nlet 详情2 = '.module-info-item:matches(更新：)&&Text'\\nlet 封面 = '.module-item-pic&&img&&data-original'\\nlet 简介 = '.module-info-introduction-content&&Text'\\nlet tabs = []\\nlet lists = []\\npdfa(html, 线路).forEach(data => {\\n    tabs.push(pdfh(data, 线路名).replace(/(.*?)号线.*/,'$1'))\\n})\\n\\npdfa(html, 选集).forEach(data => {\\n    lists.push(pdfa(data, 选集列表))\\n})\\ntry {\\n    d.push({\\n        title: pdfh(html, 详情).substring(0, 18),\\n        desc: pdfh(html, 详情1) +\\n            '\\\\n' +\\n            '\\\\n' +\\n            pdfh(html, 详情2).substring(0, 18),\\n        img: pd(html,\\n            封面) + '@Referer=',\\n        url: MY_URL,\\n        col_type: 'movie_1_vertical_pic_blur',\\n        extra: {\\n            gradient: true\\n        }\\n    });\\n} catch (e) {\\n    d.push({\\n        img: pd(html, 封面) + '@Referer=',\\n        url: MY_URL,\\n        col_type: 'movie_1_vertical_pic_blur',\\n    });\\n}\\nd.push({\\n    title: '‘‘’’<small><font color=\\\"#ff148e8e\\\">简介：' + pdfh(html, 简介).substr(0, 55) + '...</font><small><font color=\\\"red\\\">详情</font></small></small>',\\n    url: 'hiker://empty#' + '\\\\n' + pdfh(html, 简介) + '#noHistory#' + `@rule=js: var d = [];d.push({title:'影片简介：'+ MY_URL.split('#')[1],col_type: 'long_text'}); setResult(d);`,\\n    col_type: 'text_1'\\n});\\naddListener(\\\"onClose\\\", $.toString(() => {\\n    clearMyVar(\\\"lists\\\");\\n}));\\nstorage0.putMyVar(\\\"lists\\\", lists);\\nvar list = lists[getMyVar(MY_URL, '0')];\\nvar 排序 = getMyVar(MY_URL + \\\"章节排序\\\", '#1aad19\\\">正序');\\nvar 提示 = 排序 == '#FF0000\\\">倒序' ? '#1aad19\\\">正序' : '#FF0000\\\">倒序';\\nvar 排序名 = '““””<b><span style=\\\"color:排序</span></b>'\\n\\nd.push({\\n    title: '““””<b><span style=\\\"color: ' + 排序 + '</span></b>',\\n    url: $(\\\"#noLoading#\\\").lazyRule((tabs, 排序名, lazy, d) => {\\n        var lists = storage0.getMyVar(\\\"lists\\\");\\n        let 章节 = lists[getMyVar(MY_URL, '0')];\\n        var 排序 = getMyVar(MY_URL + \\\"章节排序\\\", '#1aad19\\\">正序');\\n        var 提示 = 排序 == '#FF0000\\\">倒序' ? '#1aad19\\\">正序' : '#FF0000\\\">倒序';\\n        updateItem({\\n            extra: {\\n                id: MY_URL + \\\"_排序\\\",\\n            },\\n            title: 排序名.replace('排序', 提示)\\n        })\\n        章节 = 排序 == '#1aad19\\\">正序' ? 章节.reverse() : 章节;\\n        let cp = 章节.map((data, ssid) => {\\n            return {\\n                title: pdfh(data, 'a&&Text'),\\n                url: pd(data, 'a&&href') + lazy,\\n                col_type: 章节.length > 3 ? 'text_4' : 'text_2',\\n                extra: {\\n                    cls: MY_URL + \\\"_选集\\\",\\n                    id: pd(data, 'a&&href'),\\n                    js:  ` document.querySelector(\\\"button\\\").click()` \\n                }\\n            };\\n        });\\n        deleteItemByCls(MY_URL + \\\"_选集\\\");\\n        addItemBefore(MY_URL + \\\"footer\\\", cp);\\n        putMyVar(MY_URL + \\\"章节排序\\\", 提示)\\n        return \\\"hiker://empty\\\"\\n    }, tabs, 排序名, lazy, d[0]),\\n    col_type: 'scroll_button',\\n    extra: {\\n        id: MY_URL + \\\"_排序\\\",\\n    }\\n})\\n\\ntabs.forEach((data, id) => {\\n    d.push({\\n        title: getMyVar(MY_URL, '0') == id ? '““' + data + '””' : data,\\n        url: $(\\\"#noLoading#\\\").lazyRule((线路, lazy, id) => {\\n            var lists = storage0.getMyVar(\\\"lists\\\");\\n            var 排序 = getMyVar(MY_URL + \\\"章节排序\\\", '#1aad19\\\">正序');\\n            var 提示 = 排序 == '#FF0000\\\">倒序' ? '#1aad19\\\">正序' : '#FF0000\\\">倒序';\\n            线路.forEach((data, xlid) => {\\n                updateItem({\\n                    title: id == xlid ? '““' + data + '””' : data,\\n                    extra: {\\n                        id: MY_URL + \\\"_线路\\\" + xlid\\n                    }\\n                });\\n            })\\n            putMyVar(MY_URL, id)\\n            let 章节 = lists[getMyVar(MY_URL, '0')];\\n            章节 = 排序 == '#FF0000\\\">倒序' ? 章节.reverse() : 章节;\\n            let cp = 章节.map((data, ssid) => {\\n                return {\\n                    title: pdfh(data, 'a&&Text'),\\n                    url: pd(data, 'a&&href') + lazy,\\n                    col_type: 章节.length > 3 ? 'text_4' : 'text_2',\\n                    extra: {\\n                        cls: MY_URL + \\\"_选集\\\",\\n                        id: pd(data, 'a&&href'),\\n                        js:  ` document.querySelector(\\\"button\\\").click()` \\n                    }\\n                };\\n            });\\n            deleteItemByCls(MY_URL + \\\"_选集\\\");\\n            addItemBefore(MY_URL + \\\"footer\\\", cp);\\n            return \\\"hiker://empty\\\"\\n        }, tabs, lazy, id),\\n        col_type: 'scroll_button',\\n        extra: {\\n            id: MY_URL + \\\"_线路\\\" + id\\n        }\\n    });\\n})\\n\\nlet list = 排序 === '#FF0000\\\">倒序' ? list.reverse() : list;\\nlist.forEach((data, id) => {\\n    d.push({\\n        title: pdfh(data, 'a&&Text'),\\n        url: pd(data, 'a&&href') + lazy,\\n        col_type: list.length > 3 ? 'text_4' : 'text_2',\\n        extra: {\\n            cls: MY_URL + \\\"_选集\\\",\\n            id: pd(data, 'a&&href'),\\n            js:  ` document.querySelector(\\\"button\\\").click()`  \\n        },\\n    });\\n})\\nd.push({\\n    col_type: \\\"big_blank_block\\\",\\n    extra: {\\n        id: MY_URL + \\\"footer\\\"\\n    }\\n});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"lazy\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((MY_HOME)=> {\\n    var html = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1])\\n    var url = html.url\\n    if (html.encrypt == '1') {\\n        url = unescape(url);\\n    } else if (html.encrypt == '2') {\\n        url = unescape(base64Decode(url));\\n    }\\n        return url\\n}, MY_HOME)\"}]","proxy":"","icon":"https://www.iyf.lv/upload/mxprocms/20240815-1/107e7420e8221ffbd133730e6c2b2be2.png"}